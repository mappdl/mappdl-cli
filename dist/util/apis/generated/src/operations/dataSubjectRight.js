"use strict";
/*
 * Copyright (c) MappDL Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by MappDL (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataSubjectRightImpl = void 0;
const coreClient = require("@azure/core-client");
const Mappers = require("../models/mappers");
const Parameters = require("../models/parameters");
/** Class containing DataSubjectRight operations. */
class DataSubjectRightImpl {
    /**
     * Initialize a new instance of the class DataSubjectRight class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * test
     * @param token Unique request ID (GUID)
     * @param options The options parameters.
     */
    cancelExportRequest(token, options) {
        return this.client.sendOperationRequest({ token, options }, cancelExportRequestOperationSpec);
    }
    /**
     * test
     * @param token Unique request ID (GUID)
     * @param options The options parameters.
     */
    exportStatusRequest(token, options) {
        return this.client.sendOperationRequest({ token, options }, exportStatusRequestOperationSpec);
    }
    /**
     * test
     * @param options The options parameters.
     */
    exportRequest(options) {
        return this.client.sendOperationRequest({ options }, exportRequestOperationSpec);
    }
    /**
     * test
     * @param token Unique request ID (GUID)
     * @param email Email used for cancel delete with x-authz-bypass headers
     * @param options The options parameters.
     */
    cancelDeleteRequest(token, email, options) {
        return this.client.sendOperationRequest({ token, email, options }, cancelDeleteRequestOperationSpec);
    }
    /**
     * test
     * @param token Unique request ID (GUID)
     * @param email Email used for delete with x-authz-bypass headers
     * @param options The options parameters.
     */
    deleteStatusRequest(token, email, options) {
        return this.client.sendOperationRequest({ token, email, options }, deleteStatusRequestOperationSpec);
    }
    /**
     * test
     * @param options The options parameters.
     */
    deleteRequest(options) {
        return this.client.sendOperationRequest({ options }, deleteRequestOperationSpec);
    }
}
exports.DataSubjectRightImpl = DataSubjectRightImpl;
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const cancelExportRequestOperationSpec = {
    path: "/v0.1/user/dsr/export/{token}/cancel",
    httpMethod: "POST",
    responses: {
        202: {
            bodyMapper: Mappers.Paths18Qfkd0V01UserDsrExportTokenCancelPostResponses202ContentApplicationJsonSchema,
            headersMapper: Mappers.DataSubjectRightCancelExportRequestHeaders
        },
        503: {
            bodyMapper: Mappers.Paths1Tf7AbnV01UserDsrExportTokenCancelPostResponses503ContentApplicationJsonSchema
        },
        default: {
            bodyMapper: Mappers.PathsYldp5RV01UserDsrExportTokenCancelPostResponsesDefaultContentApplicationJsonSchema
        }
    },
    urlParameters: [Parameters.$host, Parameters.token],
    headerParameters: [Parameters.accept],
    serializer
};
const exportStatusRequestOperationSpec = {
    path: "/v0.1/user/dsr/export/{token}",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.Paths1Krqtk7V01UserDsrExportTokenGetResponses200ContentApplicationJsonSchema
        },
        default: {
            bodyMapper: Mappers.PathsKhkcspV01UserDsrExportTokenGetResponsesDefaultContentApplicationJsonSchema
        }
    },
    urlParameters: [Parameters.$host, Parameters.token],
    headerParameters: [Parameters.accept],
    serializer
};
const exportRequestOperationSpec = {
    path: "/v0.1/user/dsr/export",
    httpMethod: "POST",
    responses: {
        202: {
            bodyMapper: Mappers.Paths1NpsrnaV01UserDsrExportPostResponses202ContentApplicationJsonSchema,
            headersMapper: Mappers.DataSubjectRightExportRequestHeaders
        },
        default: {
            bodyMapper: Mappers.Paths14JqlllV01UserDsrExportPostResponsesDefaultContentApplicationJsonSchema
        }
    },
    urlParameters: [Parameters.$host],
    headerParameters: [Parameters.accept],
    serializer
};
const cancelDeleteRequestOperationSpec = {
    path: "/v0.1/user/dsr/delete/{token}/cancel",
    httpMethod: "POST",
    responses: {
        202: {
            bodyMapper: Mappers.PathsJv03TbV01UserDsrDeleteTokenCancelPostResponses202ContentApplicationJsonSchema,
            headersMapper: Mappers.DataSubjectRightCancelDeleteRequestHeaders
        },
        503: {
            bodyMapper: Mappers.Paths1Ysi41QV01UserDsrDeleteTokenCancelPostResponses503ContentApplicationJsonSchema
        },
        default: {
            bodyMapper: Mappers.PathsE7Evb8V01UserDsrDeleteTokenCancelPostResponsesDefaultContentApplicationJsonSchema
        }
    },
    requestBody: {
        parameterPath: { email: ["email"] },
        mapper: Object.assign(Object.assign({}, Mappers.PathsQga5LlV01UserDsrDeleteTokenCancelPostRequestbodyContentApplicationJsonSchema), { required: true })
    },
    urlParameters: [Parameters.$host, Parameters.token],
    headerParameters: [Parameters.contentType, Parameters.accept],
    mediaType: "json",
    serializer
};
const deleteStatusRequestOperationSpec = {
    path: "/v0.1/user/dsr/delete/{token}",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.PathsWwssknV01UserDsrDeleteTokenGetResponses200ContentApplicationJsonSchema
        },
        default: {
            bodyMapper: Mappers.PathsSepmdaV01UserDsrDeleteTokenGetResponsesDefaultContentApplicationJsonSchema
        }
    },
    queryParameters: [Parameters.email3],
    urlParameters: [Parameters.$host, Parameters.token],
    headerParameters: [Parameters.accept],
    serializer
};
const deleteRequestOperationSpec = {
    path: "/v0.1/user/dsr/delete",
    httpMethod: "POST",
    responses: {
        202: {
            bodyMapper: Mappers.Paths1Shlm9KV01UserDsrDeletePostResponses202ContentApplicationJsonSchema,
            headersMapper: Mappers.DataSubjectRightDeleteRequestHeaders
        },
        default: {
            bodyMapper: Mappers.Paths105AankV01UserDsrDeletePostResponsesDefaultContentApplicationJsonSchema
        }
    },
    urlParameters: [Parameters.$host],
    headerParameters: [Parameters.accept],
    serializer
};
