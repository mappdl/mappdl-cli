"use strict";
/*
 * Copyright (c) MappDL Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by MappDL (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StoreNotificationsImpl = void 0;
const coreClient = require("@azure/core-client");
const Mappers = require("../models/mappers");
const Parameters = require("../models/parameters");
/** Class containing StoreNotifications operations. */
class StoreNotificationsImpl {
    /**
     * Initialize a new instance of the class StoreNotifications class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Application specific store service status
     * @param ownerName The name of the owner
     * @param appName The name of the application
     * @param options The options parameters.
     */
    getNotificationByAppId(ownerName, appName, options) {
        return this.client.sendOperationRequest({ ownerName, appName, options }, getNotificationByAppIdOperationSpec);
    }
}
exports.StoreNotificationsImpl = StoreNotificationsImpl;
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const getNotificationByAppIdOperationSpec = {
    path: "/v0.1/apps/{owner_name}/{app_name}/store_service_status",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.Paths18FdbxcV01AppsOwnerNameAppNameStoreServiceStatusGetResponses200ContentApplicationJsonSchema
        },
        default: {
            bodyMapper: Mappers.Paths1Yn7B37V01AppsOwnerNameAppNameStoreServiceStatusGetResponsesDefaultContentApplicationJsonSchema
        }
    },
    urlParameters: [Parameters.$host, Parameters.ownerName, Parameters.appName],
    headerParameters: [Parameters.accept],
    serializer
};
