"use strict";
/*
 * Copyright (c) MappDL Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by MappDL (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppImpl = void 0;
const coreClient = require("@azure/core-client");
const Mappers = require("../models/mappers");
const Parameters = require("../models/parameters");
/** Class containing App operations. */
class AppImpl {
    /**
     * Initialize a new instance of the class App class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * **Warning, this operation is not reversible.**
     *
     * A successful call to this API will permanently stop ingesting any logs received via SDK by app_id,
     * and cannot be restored. We advise caution when using this API, it is designed to permanently disable
     * an app_id.
     *
     * @param ownerName The name of the owner
     * @param appName The name of the application
     * @param options The options parameters.
     */
    blockLogs(ownerName, appName, options) {
        return this.client.sendOperationRequest({ ownerName, appName, options }, blockLogsOperationSpec);
    }
}
exports.AppImpl = AppImpl;
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const blockLogsOperationSpec = {
    path: "/v0.1/apps/{owner_name}/{app_name}/devices/block_logs",
    httpMethod: "PUT",
    responses: {
        200: {
            bodyMapper: { type: { name: "String" } }
        }
    },
    urlParameters: [Parameters.$host, Parameters.ownerName, Parameters.appName],
    headerParameters: [Parameters.accept],
    serializer
};
