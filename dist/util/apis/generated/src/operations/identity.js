"use strict";
/*
 * Copyright (c) MappDL Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by MappDL (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityImpl = void 0;
const coreClient = require("@azure/core-client");
const Mappers = require("../models/mappers");
const Parameters = require("../models/parameters");
/** Class containing Identity operations. */
class IdentityImpl {
    /**
     * Initialize a new instance of the class Identity class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Returns users of a tenant.
     * Returns all users if no searchTerm param is specified.
     * @param ownerName The name of the owner
     * @param appName The name of the application
     * @param options The options parameters.
     */
    getUsers(ownerName, appName, options) {
        return this.client.sendOperationRequest({ ownerName, appName, options }, getUsersOperationSpec);
    }
}
exports.IdentityImpl = IdentityImpl;
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const getUsersOperationSpec = {
    path: "/v0.1/apps/{owner_name}/{app_name}/auth/users",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: { type: { name: "Stream" }, serializedName: "parsedResponse" }
        },
        401: {
            bodyMapper: Mappers.Paths1458PiV01AppsOwnerNameAppNameAuthUsersGetResponses401ContentApplicationJsonSchema
        },
        500: {
            bodyMapper: Mappers.Paths1Bjskc1V01AppsOwnerNameAppNameAuthUsersGetResponses500ContentApplicationJsonSchema
        }
    },
    queryParameters: [Parameters.searchTerm],
    urlParameters: [Parameters.$host, Parameters.ownerName, Parameters.appName],
    headerParameters: [Parameters.accept, Parameters.aCAuthorizationAADGraph],
    serializer
};
