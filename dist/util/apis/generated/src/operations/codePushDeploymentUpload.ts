/*
 * Copyright (c) MappDL Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by MappDL (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CodePushDeploymentUpload } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { MappDLClient } from "../mappDLClient";
import {
  CodePushDeploymentUploadCreateOptionalParams,
  CodePushDeploymentUploadCreateResponse
} from "../models";

/** Class containing CodePushDeploymentUpload operations. */
export class CodePushDeploymentUploadImpl implements CodePushDeploymentUpload {
  private readonly client: MappDLClient;

  /**
   * Initialize a new instance of the class CodePushDeploymentUpload class.
   * @param client Reference to the service client
   */
  constructor(client: MappDLClient) {
    this.client = client;
  }

  /**
   * Create a new CodePush release upload for the specified deployment
   * @param ownerName The name of the owner
   * @param appName The name of the application
   * @param options The options parameters.
   */
  create(
    ownerName: string,
    appName: string,
    options?: CodePushDeploymentUploadCreateOptionalParams
  ): Promise<CodePushDeploymentUploadCreateResponse> {
    return this.client.sendOperationRequest(
      { ownerName, appName, options },
      createOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const createOperationSpec: coreClient.OperationSpec = {
  path:
    "/v0.1/apps/{owner_name}/{app_name}/deployments/uploads",
  httpMethod: "POST",
  responses: {
    200: {
      bodyMapper:
        Mappers.Paths1Kb13FjV01AppsOwnerNameAppNameDeploymentsDeploymentNameUploadsPostResponses200ContentApplicationJsonSchema
    },
    default: {
      bodyMapper:
        Mappers.PathsO9B77WV01AppsOwnerNameAppNameDeploymentsDeploymentNameUploadsPostResponsesDefaultContentApplicationJsonSchema
    }
  },
  urlParameters: [
    Parameters.$host,
    Parameters.ownerName,
    Parameters.appName,
  ],
  headerParameters: [Parameters.accept],
  serializer
};
